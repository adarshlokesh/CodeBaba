-- MySQL dump 10.13  Distrib 5.7.12, for Win32 (AMD64)
--
-- Host: localhost    Database: code
-- ------------------------------------------------------
-- Server version	5.0.16-nt

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Not dumping tablespaces as no INFORMATION_SCHEMA.FILES table on this server
--

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `posts` (
  `uid` int(11) default NULL,
  `pid` int(11) NOT NULL auto_increment,
  `pic` varchar(45) default NULL,
  `title` varchar(45) default NULL,
  `description` varchar(100) default NULL,
  `program` longtext NOT NULL,
  `likes` int(11) default '0',
  PRIMARY KEY  (`pid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (18,37,'M.jpg','Example1','testing from the first','/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage controller;\r\n\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.servlet.RequestDispatcher;\r\nimport javax.servlet.ServletException;\r\nimport javax.servlet.http.HttpServlet;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport java.util.*;\r\nimport javax.servlet.http.HttpSession;\r\nimport model.CardDetails;\r\n\r\n/**\r\n *\r\n * @author Raghu\r\n */\r\npublic class mainDecision extends HttpServlet {\r\n\r\n    /**\r\n     * Processes requests for both HTTP &ltcode&gtGET&lt/code&gt and &ltcode&gtPOST&lt/code&gt\r\n     * methods.\r\n     *\r\n     * @param request servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException if an I/O error occurs\r\n     */\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"&lt!DOCTYPE html&gt\");\r\n            out.println(\"&lthtml&gt\");\r\n            out.println(\"&lthead&gt\");\r\n            out.println(\"&lttitle&gtServlet mainDecision&lt/title&gt\");            \r\n            out.println(\"&lt/head&gt\");\r\n            out.println(\"&ltbody&gt\");\r\n            out.println(\"&lth1&gtServlet mainDecision at \" + request.getContextPath() + \"&lt/h1&gt\");\r\n            out.println(\"&lt/body&gt\");\r\n            out.println(\"&lt/html&gt\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n   \r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n      //  processRequest(request, response);\r\n      \r\n      String fromwhere=request.getParameter(\"fromwhere\");\r\n      PrintWriter out=response.getWriter();\r\n      out.println(fromwhere);\r\n      if(fromwhere.equalsIgnoreCase(\"login\"))\r\n      {\r\n          String uname=request.getParameter(\"username\");\r\n          String pass=request.getParameter(\"password\");\r\n          int uid=validateUser(uname,pass);\r\n          System.out.println(\"uid in post \"+uid);\r\n          if(uid&gt=0)\r\n          {\r\n              \r\n              \r\n              RequestDispatcher rd=request.getRequestDispatcher(\"/mainPage.jsp\");\r\n              rd.forward(request, response);\r\n          }\r\n      }\r\n      else if(fromwhere.equalsIgnoreCase(\"register\"))\r\n      {\r\n          boolean check=registerUser(request);\r\n          System.out.println(check);\r\n          \r\n           RequestDispatcher rd=request.getRequestDispatcher(\"/index.jsp\");\r\n              rd.forward(request, response);\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    /**\r\n     * Returns a short description of the servlet.\r\n     *\r\n     * @return a String containing servlet description\r\n     */\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// &lt/editor-fold&gt\r\n    \r\n    private int validateUser(String uname,String pass)\r\n    {\r\n                boolean validUser = false;\r\n		String validateUserQry = \"select uid from login where username=? and password=?\";\r\n		try\r\n		{\r\n			Class.forName(\"com.mysql.jdbc.Driver\");\r\n			Connection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/code\", \"root\",\"raghu\");\r\n			//System.out.println(email);\r\n			//System.out.println(password);\r\n			PreparedStatement stat = con.prepareStatement(validateUserQry);\r\n			stat.setString(1,uname);\r\n			stat.setString(2, pass);\r\n                        System.out.println(uname+\"  \"+pass);\r\n			ResultSet rs = stat.executeQuery();\r\n			\r\n			if(rs.next()) {				\r\n	\r\n					validUser = true;\r\n                                     \r\n                        int uid=rs.getInt(\"uid\");\r\n                        System.out.println(uid);\r\n                        return uid;\r\n                                       // System.out.println(\"id = \"+rs.getString(\"username\")+\"  pass =\"+rs.getString(\"password\"));\r\n			}\r\n				\r\n		}\r\n		catch(Exception e){\r\n			System.out.println(\"Exception:\"+e);\r\n			\r\n		}  \r\n                return -1;\r\n    }\r\n    \r\n    private boolean registerUser(HttpServletRequest request)\r\n    {\r\n        String name,email,phone,pass;\r\n        name=request.getParameter(\"name\");\r\n        email=request.getParameter(\"email\");\r\n        phone=request.getParameter(\"phone\");\r\n        pass=request.getParameter(\"pass\");\r\n        \r\n        String checkRecord=\"select * from newusers where name=? and email=?\";\r\n        String validateUserQry = \"insert into newusers (name,email,phone,password) values (?,?,?,?);\";\r\n		try\r\n		{\r\n			Class.forName(\"com.mysql.jdbc.Driver\");\r\n			Connection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/code\", \"root\",\"raghu\");\r\n			//System.out.println(email);\r\n			//System.out.println(password);\r\n			PreparedStatement stat = con.prepareStatement(checkRecord);\r\n                        stat.setString(1,name);\r\n                        stat.setString(2,email);\r\n                        ResultSet rs=stat.executeQuery();\r\n                        if(rs.next())\r\n                        {\r\n                            if(rs.next())\r\n                            return false;\r\n                        }\r\n                                \r\n                        \r\n                                stat=con.prepareStatement(validateUserQry);\r\n			stat.setString(1,name);\r\n			stat.setString(2, email);\r\n                        stat.setString(3, phone);\r\n                        stat.setString(4, pass);\r\n			stat.executeUpdate();      \r\n                        \r\n                        \r\n                             String getuid=\"select uid from newusers where name=? and email=?\"; \r\n                             stat = con.prepareStatement(getuid);\r\n                             System.out.println(name+\"  \"+email);\r\n                        stat.setString(1,name);\r\n                        stat.setString(2,email);\r\n                        rs=stat.executeQuery();\r\n                        int uid=0;\r\n                       rs.next();\r\n                            uid=rs.getInt(\"uid\");\r\n                            System.out.println(uid);\r\n                        \r\n                        String addLogin=\"insert into login (uid,username,password) values (?,?,?)\";\r\n                        stat=con.prepareStatement(addLogin);\r\n                        stat.setInt(1,uid);\r\n                        stat.setString(2,name);\r\n                        stat.setString(3,pass);\r\n                        stat.executeUpdate();\r\n			\r\n			\r\n				\r\n		}\r\n		catch(Exception e){\r\n			System.out.println(\"Exception:\"+e);\r\n			\r\n		}  \r\n                return true;\r\n        \r\n    }\r\n    \r\n    static public ArrayList getPost()\r\n    {\r\n        ArrayList&ltCardDetails&gt la=new ArrayList&ltCardDetails&gt();\r\n        \r\n        \r\n        String checkRecord=\"select * from posts\";\r\n        String getUserDetails=\"select name,about from newusers where uid=?\";\r\n        \r\n		try\r\n		{\r\n			Class.forName(\"com.mysql.jdbc.Driver\");\r\n			Connection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/code\", \"root\",\"raghu\");\r\n			//System.out.println(email);\r\n			//System.out.println(password);\r\n			PreparedStatement stat = con.prepareStatement(checkRecord);\r\n                        \r\n                        ResultSet rs=stat.executeQuery();\r\n                        CardDetails c;\r\n                        while(rs.next())\r\n                        {\r\n                            \r\n                            c=new CardDetails();\r\n                            PreparedStatement stat1=con.prepareStatement(getUserDetails);\r\n                            stat1.setInt(1, rs.getInt(\"uid\"));\r\n                            ResultSet rs1=stat1.executeQuery();\r\n                            rs1.next();\r\n                            c.setUname(rs1.getString(\"name\"));\r\n                            c.setAbout(rs1.getString(\"about\"));\r\n                            c.setPic(rs.getString(\"pic\"));\r\n                            c.setTitle(rs.getString(\"title\"));\r\n                            c.setDescription(rs.getString(\"description\"));\r\n                            c.setProgram(rs.getString(\"program\"));\r\n                            c.setPid(rs.getString(\"pid\"));\r\n                            \r\n                            la.add(c);\r\n                           \r\n                        }\r\n                                \r\n                                \r\n                               \r\n			\r\n				\r\n		}\r\n		catch(Exception e){\r\n			System.out.println(\"Exception:\"+e);\r\n			\r\n		}  \r\n        \r\n        \r\n        return la;\r\n    }\r\n\r\n}',0),(21,38,'A.jpg','Insertion Sort','Transfer and conquer method is used in the program','#include&ltstdio.h&gt\r\n#include&lttime.h&gt\r\n#include&ltstdlib.h&gt\r\n#define x 1000\r\n#define y 10000\r\n#define inc 1000\r\n\r\nint main()\r\n{\r\n	float diff;\r\n	int *a,i,j,lt,tmp;\r\n	FILE *file1,*file2;\r\n	float st_time,en_time;\r\n\r\n	system(\"rm -rf selection_sort.txt\");\r\n	for(lt=x;lt&lt=y;lt+=inc){\r\n	srand(time(NULL));\r\n	file1=fopen(\"select.txt\",\"w\");\r\n	file2=fopen(\"selection_sort.txt\",\"a\");\r\n 	\r\n	a=(int *) malloc(lt*sizeof(int));\r\n	\r\n	for(i=0;i&ltlt;i++){\r\n	   a[i]=rand() ;\r\n	\r\n	st_time=clock();\r\n	\r\n	for(i=0;i&ltlt-1;i++){\r\n	   for(j=i+1;j&ltlt;j++){\r\n	      if(a[i]&lta[j]){\r\n	         tmp=a[i];\r\n		 a[i]=a[j];\r\n	         a[j]=tmp;\r\n	      }\r\n	   }\r\n 	}\r\n	en_time=clock();\r\n	for(i=0;i&ltlt;i++){\r\n	   fprintf(file1,\"%d\\n\",a[i]);\r\n        }\r\n	fclose(file1);\r\n        diff=(en_time-st_time)/CLOCKS_PER_SEC;\r\n	fprintf(file2,\"%d\\t\",lt);\r\n	fprintf(file2,\"%f\\n\",diff);\r\n	fclose(file2);\r\n     }\r\n	printf(\"Insertion sort analysis genaration complete\\n\\n\");\r\n	return 0;\r\n}',0),(22,50,'P.jpg','Merge Sort','Divide and conquer','//merge sort\r\n#include&ltstdio.h&gt\r\n#include&ltstdlib.h&gt\r\n#include&lttime.h&gt\r\n\r\n#define x 100\r\n#define y 1000\r\n#define inc 100\r\n\r\nint *arr,n;\r\n\r\nvoid mergesort(int[],int,int);\r\nvoid merge(int[], int, int, int);\r\n\r\nvoid main()\r\n{\r\nint i;\r\nfloat diff,st_time,end_time;\r\nFILE *f1,*f2;\r\nsrand(time(NULL));\r\nsystem(\"rm -rf merge1.txt\");\r\nsystem(\"rm -rf merge2.txt\");\r\nfor(n=x;n&lt=y;n+=inc)\r\n{\r\n    f1=fopen(\"merge1.txt\",\"a\");\r\n    f2=fopen(\"merge2.txt\",\"a\");\r\n   \r\n    arr=(int*)malloc(n*sizeof(int));\r\n    for(i=0;i&ltn;i++)\r\n    //scanf(\"%d\",&arr[i]);\r\n    arr[i]=rand()%1000;\r\n\r\n    st_time=clock();   \r\n    mergesort(arr,0,n-1);\r\n    end_time=clock();\r\n\r\n    //printf(\"Sorted array:\\n\");\r\n    for(i=0;i&ltn;i++)\r\n        fprintf(f1,\"%d\\n\",arr[i]);\r\n       \r\n    diff=(end_time-st_time)*1000/CLOCKS_PER_SEC;\r\n    fprintf(f2,\"%d\\t%f\\n\",n,diff);   \r\n    fclose(f1);\r\n    fclose(f2);\r\n}\r\n\r\n}\r\n\r\nvoid mergesort(int arr[],int low,int high)\r\n{\r\nint mid;\r\nif(low&lthigh)\r\n    {\r\n    mid=(low+high)/2;\r\n    mergesort(arr,low,mid);   \r\n    mergesort(arr,mid+1,high);\r\n    merge(arr,low,mid,high);\r\n    }\r\n}\r\n\r\nvoid merge(int a[],int low,int mid,int high)\r\n{\r\n\r\nint i,j,k,*t;\r\nt=(int *)malloc(n*sizeof(int));\r\ni=low;\r\nj=mid+1;\r\nk=low;\r\nwhile((i&lt=mid) && (j&lt=high))\r\nif(a[i]&lt=a[j])\r\nt[k++]=a[i++];\r\nelse\r\nt[k++]=a[j++];\r\nwhile(i&lt=mid)\r\nt[k++]=a[i++];\r\nwhile(j&lt=high)\r\nt[k++]=a[j++];\r\nfor(i=low;i&lt=high;i++)\r\na[i]=t[i];\r\n}',0),(23,51,'K.jpg','Binary search','Brute force','#include&ltstdio.h&gt\r\n#include&ltstdlib.h&gt\r\n#include&lttime.h&gt\r\nint *arr;\r\nint main()\r\n{\r\n	int i,f,m,l,n,key;\r\n	double s,e;\r\n	srand(time(NULL));\r\n	printf(\"Enter the number of elements\\n\");\r\n	scanf(\"%d\",&n);\r\n	arr=(int *)malloc(sizeof(int)*n);\r\n	printf(\"Enter the elements\\n\");\r\n	for(i=0;i&ltn;i++){\r\n		arr[i]=i//rand()%100;\r\n		printf(\"%d\\t\",arr[i]);\r\n	}\r\n	printf(\"Enter the key:\");\r\n	scanf(\"%d\",&key);\r\n	s=clock();\r\n	f=0;\r\n	l=n-1;\r\n	m=(f+l)/2;\r\n	\r\n	while(f&lt=l){\r\n		if(arr[m]&ltkey)\r\n			f=m+1;\r\n		else if(arr[m]==key){\r\n		printf(\"%d found at location %d\\n\",key,m+1);\r\n		break;\r\n		}	\r\n		else l=m-1;\r\n		\r\n		m=(f+l)/2;\r\n	}\r\n	if(f&gtl)\r\n		printf(\"%d not found in the list\\n\",key);\r\n	e=clock();\r\n	printf(\"Time taken:%lf\",(e-s)/CLOCKS_PER_SEC);\r\n	return 0;		\r\n}',0);
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-02-11 20:26:30
